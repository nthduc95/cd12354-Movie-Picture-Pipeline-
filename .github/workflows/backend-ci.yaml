name: Backend Continuous Integration
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pipenv dependencies
        id: cache-pip
        uses: actions/cache@v3
        env:
          cache-name: cache-pip-dependencies
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install

      - name: Run lint
        run: |
          pipenv run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pipenv dependencies
        id: cache-pip
        uses: actions/cache@v3
        env:
          cache-name: cache-pip-dependencies
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install

      - name: Run tests
        run: |
          pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ECR }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ECR }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_BE_RELEASE_IMAGE=${{ steps.login-ecr.outputs.registry }}/backend:${SHORT_SHA_COMMIT} >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          echo "Build a docker container and push it to ECR"
          docker build -t ${CONTAINER_BE_RELEASE_IMAGE} .
          echo "List Docker images"
          docker images

      - name: Cache Docker image
        uses: actions/cache@v3
        with:
          path: ~/docker-cache
          key: docker-${{ github.sha }}-frontend
          restore-keys: |
            docker-${{ github.sha }}-